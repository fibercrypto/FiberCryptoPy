/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

typedef struct { const char *p; ptrdiff_t n; } _GoString_;

#endif

/* Start of preamble from import "C" comments.  */


#line 7 "util.pluginutil.go"


  #include <string.h>
  #include <stdlib.h>

  #include "fctypes.h"

#line 1 "cgo-generated-wrapper"

#line 3 "libfc_handle.go"


  #include <string.h>
  #include <stdlib.h>


  #include "fctypes.h"

#line 1 "cgo-generated-wrapper"

#line 7 "util.util.go"


  #include <string.h>
  #include <stdlib.h>

  #include "fctypes.h"

#line 1 "cgo-generated-wrapper"

#line 3 "libfc_handle_helper.go"


  #include <string.h>
  #include <stdlib.h>


  #include "fctypes.h"

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

typedef _GoString_ GoString;
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


extern GoUint32 FC_util_AltcoinCaption(GoString p0, GoString_* p1);

extern void FC_handle_close(Handle p0);

extern GoUint32 FC_util_Min(GoInt p0, GoInt p1, GoInt* p2);

extern GoUint32 FC_util_GetCoinValue(GoString p0, GoString p1, GoUint64* p2);

extern GoUint32 FC_util_FormatUint64(GoUint64 p0, GoString_* p1);

extern GoUint32 FC_util_FormatCoins(GoUint64 p0, GoUint64 p1, GoString_* p2);

extern GoUint32 FC_util_RemoveZeros(GoString p0, GoString_* p1);

extern GoUint32 FC_util_StringInList(GoString p0, Strings__Handle p1, GoUint8* p2);

extern GoUint32 FC_JsonEncode_Handle(Handle p0, GoString_* p1);

#ifdef __cplusplus
}
#endif
